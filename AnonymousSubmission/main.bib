@Article{beutel2020flower,
  title        = "Flower: A Friendly Federated Learning Research
                 Framework",
  author       = "Daniel J Beutel and Taner Topal and Akhil Mathur and
                 Xinchi Qiu and Javier Fernandez-Marques and Yan Gao and
                 Lorenzo Sani and Hei Li Kwing and Titouan Parcollet and
                 Pedro PB de Gusmão and Nicholas D Lane",
  journal      = "arXiv preprint arXiv:2007.14390",
  year         = "2020",
}

@Misc{hall2021syft,
  title        = "Syft 0.5: A Platform for Universally Deployable
                 Structured Transparency",
  author       = "Adam James Hall and Madhava Jay and Tudor Cebere and
                 Bogdan Cebere and Koen Lennart van der Veen and George
                 Muraru and Tongye Xu and Patrick Cason and William
                 Abramson and Ayoub Benaissa and Chinmay Shah and Alan
                 Aboudib and Théo Ryffel and Kritika Prakash and Tom
                 Titcombe and Varun Kumar Khare and Maddie Shang and
                 Ionesio Junior and Animesh Gupta and Jason Paumier and
                 Nahua Kang and Vova Manannikov and Andrew Trask",
  year         = "2021",
  eprint       = "2104.12385",
  archiveprefix = "arXiv",
  primaryclass = "cs.LG",
}

@Misc{he2020fedml,
  title        = "{FedML}: A Research Library and Benchmark for
                 Federated Machine Learning",
  author       = "Chaoyang He and Songze Li and Jinhyun So and Xiao Zeng
                 and Mi Zhang and Hongyi Wang and Xiaoyang Wang and
                 Praneeth Vepakomma and Abhishek Singh and Hang Qiu and
                 Xinghua Zhu and Jianzong Wang and Li Shen and Peilin
                 Zhao and Yan Kang and Yang Liu and Ramesh Raskar and
                 Qiang Yang and Murali Annavaram and Salman Avestimehr",
  year         = "2020",
  eprint       = "2007.13518",
  archiveprefix = "arXiv",
  primaryclass = "cs.LG",
}

@Misc{ryffel2018generic,
  title        = "A generic framework for privacy preserving deep
                 learning",
  author       = "Theo Ryffel and Andrew Trask and Morten Dahl and Bobby
                 Wagner and Jason Mancuso and Daniel Rueckert and
                 Jonathan Passerat-Palmbach",
  year         = "2018",
  eprint       = "1811.04017",
  archiveprefix = "arXiv",
  primaryclass = "cs.LG",
}

@InBook{Ziller2021,
  author       = "Alexander Ziller and Andrew Trask and Antonio Lopardo
                 and Benjamin Szymkow and Bobby Wagner and Emma Bluemke
                 and Jean-Mickael Nounahon and Jonathan
                 Passerat-Palmbach and Kritika Prakash and Nick Rose and
                 Th{\'e}o Ryffel and Zarreen Naowal Reza and Georgios
                 Kaissis",
  editor       = "Muhammad Habib ur Rehman and Mohamed Medhat Gaber",
  title        = "{PySyft}: A Library for Easy Federated Learning",
  booktitle    = "Federated Learning Systems: Towards Next-Generation
                 {AI}",
  year         = "2021",
  publisher    = "Springer International Publishing",
  address      = "Cham",
  pages        = "111--139",
  abstract     = "PySyft is an open-source multi-language library
                 enabling secure and private machine learning by
                 wrapping and extending popular deep learning frameworks
                 such as PyTorch in a transparent, lightweight, and
                 user-friendly manner. Its aim is to both help
                 popularize privacy-preserving techniques in machine
                 learning by making them as accessible as possible via
                 Python bindings and common tools familiar to
                 researchers and data scientists, as well as to be
                 extensible such that new Federated Learning (FL),
                 Multi-Party Computation, or Differential Privacy
                 methods can be flexibly and simply implemented and
                 integrated. This chapter will introduce the methods
                 available within the PySyft library and describe their
                 implementations. We will then provide a
                 proof-of-concept demonstration of a FL workflow using
                 an example of how to train a convolutional neural
                 network. Next, we review the use of PySyft in academic
                 literature to date and discuss future use-cases and
                 development plans. Most importantly, we introduce Duet:
                 our tool for easier FL for scientists and data
                 owners.",
  ISBN         = "978-30307-0-6-0-4-3",
  DOI          = "10.1007/978-3-030-70604-3_5",
  URL          = "https://doi.org/10.1007/978-3-030-70604-3_5",
}
